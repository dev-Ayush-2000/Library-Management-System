/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Lib_Management;
import java.sql.*;
import Project.ConnectionProvider;
import javax.swing.JOptionPane;
import java.text.*;
import java.util.Calendar;
/**
 *
 * @author nayan
 */
public class RetBook extends javax.swing.JFrame {

    /**
     * Creates new form Issue_Book
     */
    public RetBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 125, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 131, Short.MAX_VALUE)
        );

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Return");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Status");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Book ID");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Title");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Author");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("ISBN");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Category");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Publisher");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(96, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField3)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        //new Student().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String bookID = jTextField1.getText();
        try{
            Connection con = ConnectionProvider.getCon();
            Statement st = con.createStatement();
            
            String ID = null, Username = null;
                ResultSet rs0 = st.executeQuery("(select * from student where loggedIn=1) union (select * from admin where loggedIn=1);");
                if(rs0.next()){
                    ID = rs0.getString("Student_ID");
                    Username = rs0.getString("Username");
                }
            rs0.close();
            
            Statement st1 = con.createStatement();
            String sql1 = "SELECT * FROM book WHERE Book_id='"+bookID+"'";
            String sql = "(SELECT * FROM transaction WHERE Book_id='"+bookID+"' and student_id='"+ID+"') union (SELECT * FROM transaction WHERE Book_id='"+bookID+"' and admin_id='"+ID+"')";
            //String sql = "SELECT * FROM transaction WHERE Book_id='"+bookID+"' and student_id='"+ID+"'";
            ResultSet rs1 = st1.executeQuery(sql);
            ResultSet rs = st.executeQuery(sql1);
            if(rs1.next()){
            if(rs.next()){
                jTextField2.setText(rs.getString("Title"));
                jTextField2.setEditable(false);
                jTextField3.setText(rs.getString("Author"));
                jTextField3.setEditable(false);
                jTextField4.setText(rs.getString("ISBN"));
                jTextField4.setEditable(false);
                jTextField5.setText(rs.getString("Category"));
                jTextField5.setEditable(false);
                jTextField6.setText(rs.getString("Publisher"));
                jTextField6.setEditable(false);
                jTextField7.setText(rs.getString("Status"));
                jTextField7.setEditable(false);
            }
            else{
                JOptionPane.showMessageDialog(null, "Incorrect Book ID");
                setVisible(false);
                new RetBook().setVisible(true);
            }
            }
            else{
                JOptionPane.showMessageDialog(null, "The book is not issued by you");
                setVisible(false);
                new RetBook().setVisible(true);
            }
        }
        catch(Exception e) {
        JOptionPane.showMessageDialog(null, "Connection Error");
        setVisible(false);
        new RetBook().setVisible(true);
        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Random rand= new Random();
        //int transaction_id=rand.nextInt(100000);
        //Login_Register login=new Login_Register();

        String bookID = jTextField1.getText();
        if(jTextField7.getText().compareTo("Issued") == 0){
            try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                st.executeUpdate("update book set Status='Available' where Book_Id='"+bookID+"'");
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Book is available, issue the book first");
            }

            try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                
                String StudentID = null, Username = null;
                ResultSet rs0 = st.executeQuery("(select * from student where loggedIn=1) union (select * from admin where loggedIn=1);");
                if(rs0.next()){
                    StudentID = rs0.getString("Student_ID");
                    Username = rs0.getString("Username");
                }
                rs0.close();
                
                String sql = "SELECT * FROM book WHERE Book_id='"+bookID+"'";
                ResultSet rs = st.executeQuery(sql);

                if(rs.next()){
                    String title= rs.getString("Title");
                    DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    Calendar cal = Calendar.getInstance();
                    boolean isAdmin = Username.contains("admin_");
                    if(!isAdmin) st.executeUpdate("insert into transaction values(null,'"+title+"','0','0','1','"+dateFormat.format(cal.getTime())+"','"+StudentID+"',NULL,'"+bookID+"')");
                    else st.executeUpdate("insert into transaction values(null,'"+title+"','0','0','1','"+dateFormat.format(cal.getTime())+"',null,'"+StudentID+"','"+bookID+"')");                    
                    JOptionPane.showMessageDialog(null, "Book returned successfully");
                    setVisible(false);
                    new RetBook().setVisible(true);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect Book ID");
                    setVisible(false);
                    new RetBook().setVisible(true);
                }
            }
            catch(Exception e) {JOptionPane.showMessageDialog(null, "Connection Error1");}
           
        }
        else if(jTextField7.getText().compareTo("Reserved") == 0){
            try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                st.executeUpdate("update book set status='Issued' where book_Id='"+bookID+"'");
            }
            catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Book not reserved");
            }
            //transaction_id=rand.nextInt(100000);++
            try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                
                String StudentID = null, Username = null;
                ResultSet rs0 = st.executeQuery("(select * from student where loggedIn=1) union (select * from admin where loggedIn=1);");
                if(rs0.next()){
                    StudentID = rs0.getString("Student_ID");
                    Username = rs0.getString("Username");
                }
                rs0.close();
                
                String sql = "SELECT * FROM book WHERE Book_id='"+bookID+"'";
                ResultSet rs = st.executeQuery(sql);

                if(rs.next()){
                    String title= rs.getString("Title");
                    DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    Calendar cal = Calendar.getInstance();
                    boolean isAdmin = Username.contains("admin_");
                    if(!isAdmin) st.executeUpdate("insert into transaction values(null,'"+title+"','0','0','1','"+dateFormat.format(cal.getTime())+"','"+StudentID+"',NULL,'"+bookID+"')");
                    else st.executeUpdate("insert into transaction values(null,'"+title+"','0','0','1','"+dateFormat.format(cal.getTime())+"',null,'"+StudentID+"','"+bookID+"')");                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect Book ID 1");
                    setVisible(false);
                    new RetBook().setVisible(true);
                }
            }
            catch(Exception e) {JOptionPane.showMessageDialog(null, "Connection Error2");}
            
            try{
                String title = null;
                String StudentID = null, Username = null;
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                
//                String StudentID = null;
//                ResultSet rs0 = st.executeQuery("select * from student where loggedIn = 1");
//                if(rs0.next()){StudentID = rs0.getString("Student_ID");}
//                rs0.close();
                
//                String sql0 = "SELECT * FROM book WHERE Book_id='"+bookID+"'";
//                ResultSet rs0 = st.executeQuery(sql1);
//                if(rs1.next()) title= rs1.getString("Title");
//                System.out.println(title+"\n");
//                rs1.close();
                
                String sql0 = "select * from transaction where transaction_id = (SELECT LAST_INSERT_ID()-2)";
                ResultSet rs0 = st.executeQuery(sql0);
                
                //if(rs0.next()) last = rs0.getInt(1);
                //System.out.println(rs0);
                
                
//                String sql = "SELECT * FROM transaction WHERE Book_id='"+bookID+"' and reserve_status='1'";
//                ResultSet rs = st.executeQuery(sql);
//                String StudentID=rs.getString("student_id");
//                System.out.println(StudentID+"\n");

                if(rs0.next()){
                    title = rs0.getString("Title");
                    StudentID = rs0.getString("Student_ID");
                    Username = rs0.getString("Username");
                    System.out.println("hey "+title+" Hey "+StudentID);
                    DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                    Calendar cal = Calendar.getInstance();
                    boolean isAdmin = Username.contains("admin_");
                    if(!isAdmin) st.executeUpdate("insert into transaction values(null,'"+title+"','1','0','0','"+dateFormat.format(cal.getTime())+"','"+StudentID+"',NULL,'"+bookID+"')");
                    else st.executeUpdate("insert into transaction values(null,'"+title+"','1','0','0','"+dateFormat.format(cal.getTime())+"',null,'"+StudentID+"','"+bookID+"')");
                }
                else{
                    JOptionPane.showMessageDialog(null, "Incorrect Book ID 2");
                    setVisible(false);
                    new RetBook().setVisible(true);
                }
            }
            catch(Exception e) {JOptionPane.showMessageDialog(null, "Book Returned Successfully");}
            
            
        }
        else JOptionPane.showMessageDialog(null, "Book is available, issue the book first");

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RetBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RetBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RetBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RetBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RetBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
